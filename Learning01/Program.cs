// импортируем необходимые пространства имен
using System;

// создаем собственное пространство имен
namespace ConsoleApp
{
    // общедоступный (public) класс MyApp
    public class MyApp
    {
        // общедоступный статический метод Main
        // с данного метода начинается выполнение программы
        // метод Main на вход принимает массив аргументов командной строки
        public static void Main(string[] args)
        {
            // печатает в консоль
            Console.WriteLine("Первый проект на C#. <Korobov />");    
        }
    }
}
//Однострочные комментарии

// Это однострочный комментарий
Console.WriteLine("Привет комментарии в C#"); // Это тоже однострочный комментарий, но на другой строке
//Как видно из примера выше, все ,что начинается в листинге кода с двух прямых слешей будет рассматриваться компилятором как комментарий и будет игнорироваться.
//Многострочные комментарии
//Начинаются с символов /* и заканчиваются символами */
 //Могут распространяться на несколько строк.
/*
    Это многострочный комментарий, который
    может распространяться на несколько строк
*/
Console.WriteLine("Привет комментарии в C#");

//C# - это статически типизированный язык программирования. Поэтому перед тем как использовать переменную в C# Вы должны определить ее тип. Тип переменной задает ограничение на значение переменной, а также виды операций, которые можно выполнять с ней.

//Итак, таблица с типами переменных в C# представлена ниже:
int	    4 байта	            Хранит целые числа в диапазоне от -2,147,483,648 до 2,147,483,647
long	8 байт	            Хранит целые числа в диапазоне от -9,223,372,036,854,775,808 до 9,223,372,036,854,775,807
float	4 байта	            Хранит дробные числа с точностью до 7 знаков после запятой
double	8 байт	            Хранит дробные числа с точностью до 15 знаков после запятой
bool	1 бит	            Хранит логические значения true или false
char	2 байта	            Хранит один символ/букву в одинанрных кавычках
string	2 байта на символ	Хранит последовательность символов, обрамленных в двойные кавычки

//Числа
Числа в C# делятся на две большие группы:

Целочисленные типы - к ним относятся int и double
Числа с плавающей запятой - float и double
Как правило в C# наиболее часто используются тип int и double.

 int number1 = 100            // целое число
long number2 = 230000000000L // целое число типа long

float number3 = 10.12F
double number4 = 1999399.23737D
Как говорилось ранее, типы float и double отличаются друг от друга диапазоном значений и количеством знаков после запятой. 
Так какой же из типов использовать?
Точность значения с плавающей запятой (float) указывает, сколько цифр это значение может иметь после десятичной точки. 
Точность float составляет всего шесть или семь десятичных цифр, в то время как double переменные имеют точность около 15 цифр. 
Поэтому для большинства расчетов безопаснее использовать double.
//Логические переменные
Логический тип данных в C# объявляется с ключевым словом bool и может принимать только значения true или false. Логические значения в основном используются в условных выражениях:
 bool isTrue  = true;
bool isFalse = false;
//Символы и строки
 char symbol = 'C' // один символ в одинарных кавычках!

string str = "как так строка"
Таким образом, C# имеет подобную базовую систему типов, которых будет хватать в большинстве случае. 
Однако, помимо этого у языка также есть более продвинута система типов, ориентированная на оптимизации под кокретные задачи.
