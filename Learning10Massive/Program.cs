// Массивы

// Создание массива из 12 чисел:
int [] nums = new int [l2 ];
// Перебор элементов массива :
for(int k=O; k<nums.Length; k++) {
    // Присваивание значения элементу массива:
nums[k]=3*k+l;
// Отображение значения элемента массива:
Console.Write("I "+nums[k]+" ");
}
Console.WriteLine("I");

/*Еще один небольшой пример касается создания символьного массива
(массива с элементами типа char ). Размер массива определяется значением
переменной. После создания массив заполняется случайными символами.
Содержимое массива отображается в прямом и обратном порядке.*/
// Объект для генерирования случайных чисел:
Random rnd=new Random();
// Размер массива и индексная переменная:
int size=lO, k;
// Создание символьного массива:
char[] symЬs=new char[size];
// Отображение сообщения:
Console.WriteLine("Maccив случайных символов:");
// Заполнение массива случайными символами:
for(k=O; k<symЬs.Length; k++) {
// Значение элемента массива:
symЬs [k] = (char) ('А' +rnd.Next (26));
// Отображение значения элемента массива:
Console.Write("I "+symЬs[k]+" ");
}
Console.WriteLine("I");
// Отображение сообщения:
Console.WriteLine("Maccив в обратном порядке:");
for(k=symЬs.Length-1; k>=O; k--) {
// Отображение значения для элемента массива:
Console.Write("I "+symЬs[k]+" ");
}
Console.WriteLine("I");

//Инициализация одномерного массива
// Создание и инициализация массивов:
int[] nums = { l, 3, 5, 7, 6, 5, 4 };
char[] symЬs = new char[] { 'А', 'Z', 'В', 'У' };
string[] txts = new string[3] { "один", "два", "три" };
// Отображение содержимого массивов:
Console.WriteLine("Maccив nums:");
for (int k = O; k < nums.Length; k++)
{
    Console.Write(nums[k] + " ");
}
Console.WriteLine("\nMaccив symЬs:");
for (int k = O; k < symЬs.Length; k++)
{
    Console.Write(symЬs[k] + " ");
}
Console.WriteLine("\nMaccив txts:");
for (int k = O; k < txts.Length; k++)
{
    Console.Write(txts[k] + " ");
}
Console.WriteLine();

//Копирование и присваивание массивов
// Целочисленный массив:
int[] A={l,3,5,7,9};
// Переменные массива:
int[] В, С;
// Присваивание массивов:
В=А;
// Создание нового массива:
C=new int[A.Length];
// Поэлементное копирование массива:
for(int k=O; k<A.Length; k++) {
C[k]=A[k];
// Изменение значения первого элемента в массиве А:
А[О]=О;
// Изменение значения последнего элемента
// в массиве В:
B[B.Length-1]=0;
// Сообщение в консольном окне:
Console.WriteLine("A:\tB:\tC:");
// Отображение содержимого массивов:
for(int k=O; k<A.Length; k++) {
// Отображение значений элементов массивов:
Console.WriteLine("{O} \t{l}\t{2}", A[k], B[k], C[k]);
}
}

//Поиск наибольшего значения в массиве
// Переменные для записи значения элемента и индекса:
int value, index;
// Размер массива:
int size = 15;
// Объект для генерирования случайных чисел:
Random rnd = new Random();
// Создание массива:
int[] nums = new int[size];
// Заполнение и отображение массива:
for (int k = O; k < nums.Length; k++)
{
    // Значение элемента массива:
    nums[k] = rnd.Next(l, 101);
    // Отображение значения элемента:
    Console.Write(nums[k] + " ");
}
Console.WriteLine();
// Поиск наибольшего элемента:
index = O; // Начальное значение для индекса
value = nums[index]; // Значение элемента с индексом
// Перебор элементов:
for (int k = l; k < nums.Length; k++)
{
    // Если значение проверяемого элемента больше
    // текущего наибольшего значения:
    if (nums[k] > value)
    {
        value = nums[k]; // Новое наибольшее значение
        index = k; // Новое значение для индекса
    }
}
// Отображение результата:
Console.WriteLine("Haибoльшee значение: " + value);
Console.WriteLine("Индeкc элемента: " + index);

//Сортировка массива методом пузырька
// Символьная переменная:
char s;
// Исходный символьный массив:
char[] symЬs = { 'Q', 'Ы', 'а', 'В', 'R', 'А', 'r', 'q', 'Ь' };
// Отображение содержимого массива:
Console.WriteLine("Maccив до сортировки:");
for (int k = O; k < symЬs.Length; k++)
{
    Console.Write(symЬs[k] + " ");
}
Console.WriteLine();
// Сортировка элементов в массиве:
for (int i = l; i < symЬs.Length; i++)
{
    // Перебор элементов:
    for (int j = O; j < symЬs.Length - i; j++)
    {
        // Если значение элемента слева больше
        // значения элемента справа:
        if (symЬs[j] > symЬs[j + l])
        {
            s = symЬs[j + l];
            symЬs[j + l] = symЬs[j];
            symЬs[j] = s;
        }
    }
}
// Отображение содержимого массива:
Console.WriteLine("Maccив после сортировки:");
for (int k = O; k < symЬs.Length; k++)
{
    Console.Write(symЬs[k] + " ");
}
Console.WriteLine();